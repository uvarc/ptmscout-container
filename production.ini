[app:main]
use = egg:ptmscout

pyramid.reload_templates = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.default_locale_name = en
pyramid.includes = 
	pyramid_tm
	pyramid_mailer
	pyramid_celery
	
sqlalchemy.url = mysql+mysqldb://ptmscout_web:as452g4tg65k9456@localhost:3306/ptmscout
sqlalchemy.pool_recycle = 3600

CELERY_ROUTES = {
                    'ptmworker.helpers.upload_helpers.set_job_status': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.set_job_stage': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.set_job_progress': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.increment_job_progress': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.notify_job_failed': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.finalize_annotation_upload_job': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.finalize_mcam_export_job': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.run_mcam_analysis': {'queue': 'mcam'},
                    
                    'ptmworker.helpers.upload_helpers.set_loading_status': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.set_loading_stage': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.set_progress': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.finalize_experiment_error_state': {'queue': 'notify'},
                    'ptmworker.helpers.upload_helpers.finalize_experiment_import': {'queue': 'notify'},
                    
                    'ptmworker.helpers.upload_helpers.get_proteins_from_external_databases': {'queue': 'load_proteins'},
                    'ptmworker.helpers.upload_helpers.import_go_terms': {'queue': 'load_go_terms'},
                    'ptmworker.helpers.upload_helpers.query_protein_metadata': {'queue': 'query_proteins'},
                    'ptmworker.helpers.upload_helpers.run_peptide_import': {'queue': 'load_peptides'}
                }
CELERY_BROKER_HOST = "localhost"
CELERY_BROKER_PORT = 5672
CELERY_BROKER_USER = "ptmscout"
CELERY_BROKER_PASSWORD = "ptmscout1"
CELERY_BROKER_VHOST = "ptmscout-ubuntu"
CELERY_RESULT_BACKEND = "amqp"
CELERY_IMPORTS = ("ptmworker.data_import",
                  "ptmworker.notify_tasks",
                  "ptmworker.export_tasks",
                  "ptmworker.annotate_tasks",
                  "ptmworker.mcam_tasks")
CELERY_TASK_RESULT_EXPIRES=3600
#BROKER_HEARTBEAT = 0

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543

# Begin logging configuration

[loggers]
keys = root, ptmscout, sqlalchemy

[handlers]
keys = ptmscout, sql

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = ptmscout
formatter = generic

[logger_ptmscout]
level = INFO
handlers = ptmscout
qualname = ptmscout
formatter = generic

[logger_sqlalchemy]
level = INFO
handlers = sql
qualname = sqlalchemy.engine
formatter = generic

[handler_ptmscout]
class = FileHandler
args = ('%(here)s/logs/ptmscout.log','a')
level = INFO
formatter = generic

[handler_sql]
class = FileHandler
args = ('%(here)s/logs/sql.log','a')
level = INFO
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration
